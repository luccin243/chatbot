import React from 'react';
import Stack from '@mui/material/Stack';
import Typography from '@mui/material/Typography';
import LinearProgress from '@mui/material/LinearProgress';
import { Layout } from '../../components';
import Container from '@mui/material/Container';
import data from '../../data/data.json';
import { styled } from '@mui/material';
import Button from '@mui/material/Button';
import Paper from '@mui/material/Paper';

const CtaButton = styled(Button)(({ theme }) => ({
  '& .MuiButton-endIcon': { position: 'absolute', left: 10, bgcolor: 'red' },
  padding: theme.spacing(1.3),
  borderRadius: theme.spacing(1),
}));

const MessageIcon = (
  <svg
    width="19"
    height="17"
    viewBox="0 0 19 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M4.28516 16.8931C4.63672 16.8931 5.08594 16.7954 5.63281 16.6001C6.17969 16.4048 6.7583 16.1436 7.36865 15.8164C7.979 15.4941 8.55762 15.1353 9.10449 14.7397C10.1641 14.7446 11.1577 14.6323 12.0854 14.4028C13.0132 14.1733 13.8555 13.8462 14.6123 13.4214C15.374 12.9917 16.0283 12.4839 16.5752 11.8979C17.1221 11.3071 17.5444 10.6528 17.8423 9.93506C18.1401 9.21729 18.2891 8.45557 18.2891 7.6499C18.2891 6.66357 18.062 5.74072 17.6079 4.88135C17.1587 4.01709 16.5312 3.26025 15.7256 2.61084C14.9199 1.96143 13.9849 1.45361 12.9204 1.0874C11.8608 0.721191 10.7207 0.538086 9.5 0.538086C8.2793 0.538086 7.13672 0.721191 6.07227 1.0874C5.0127 1.45361 4.08008 1.96143 3.27441 2.61084C2.47363 3.26025 1.84619 4.01709 1.39209 4.88135C0.937988 5.74072 0.710938 6.66357 0.710938 7.6499C0.710938 8.45068 0.862305 9.21729 1.16504 9.94971C1.46777 10.6772 1.89502 11.3389 2.44678 11.9346C2.99854 12.5303 3.65039 13.0283 4.40234 13.4287C4.30469 13.5996 4.19238 13.79 4.06543 14C3.94336 14.2051 3.81641 14.4053 3.68457 14.6006C3.55762 14.7959 3.44287 14.9619 3.34033 15.0986C3.14502 15.3623 3.05957 15.6333 3.08398 15.9116C3.1084 16.1899 3.22559 16.4219 3.43555 16.6074C3.64551 16.7979 3.92871 16.8931 4.28516 16.8931ZM5.34717 14.9375C5.27393 14.9619 5.2251 14.9595 5.20068 14.9302C5.18115 14.9058 5.1958 14.8618 5.24463 14.7983C5.40088 14.603 5.59131 14.354 5.81592 14.0513C6.04053 13.7485 6.22852 13.4604 6.37988 13.187C6.50195 12.9575 6.53125 12.7524 6.46777 12.5718C6.40918 12.3862 6.2627 12.2349 6.02832 12.1177C5.31543 11.7808 4.70508 11.3828 4.19727 10.9238C3.69434 10.46 3.30859 9.95215 3.04004 9.40039C2.77148 8.84375 2.63721 8.26025 2.63721 7.6499C2.63721 6.93213 2.81299 6.26074 3.16455 5.63574C3.521 5.01074 4.01172 4.46143 4.63672 3.98779C5.2666 3.50928 5.99658 3.13574 6.82666 2.86719C7.65674 2.59375 8.54785 2.45703 9.5 2.45703C10.4521 2.45703 11.3433 2.59375 12.1733 2.86719C13.0034 3.13574 13.731 3.50928 14.356 3.98779C14.9858 4.46143 15.4766 5.01074 15.8281 5.63574C16.1846 6.26074 16.3628 6.93213 16.3628 7.6499C16.3628 8.36279 16.1846 9.03418 15.8281 9.66406C15.4766 10.2891 14.9858 10.8384 14.356 11.312C13.731 11.7856 13.0034 12.1592 12.1733 12.4326C11.3433 12.7012 10.4521 12.8354 9.5 12.8354C9.44141 12.8354 9.37061 12.8354 9.2876 12.8354C9.20947 12.8306 9.12158 12.8281 9.02393 12.8281C8.86279 12.8281 8.71631 12.8525 8.58447 12.9014C8.45264 12.9502 8.30859 13.0381 8.15234 13.165C7.86914 13.3799 7.54932 13.6094 7.19287 13.8535C6.83643 14.0928 6.48975 14.3101 6.15283 14.5054C5.8208 14.7056 5.55225 14.8496 5.34717 14.9375Z"
      fill="black"
    />
  </svg>
);

const PhoneIcon = (
  <svg
    width="16"
    height="16"
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M12.1548 15.2266C12.7993 15.2266 13.3608 15.1191 13.8394 14.9043C14.3228 14.6943 14.7769 14.3647 15.2017 13.9155C15.231 13.8911 15.2578 13.8643 15.2822 13.835C15.3066 13.8057 15.3335 13.7764 15.3628 13.7471C15.5679 13.5127 15.7241 13.2637 15.8315 13C15.9438 12.7412 16 12.4922 16 12.2529C16 11.96 15.9268 11.6865 15.7803 11.4326C15.6338 11.1738 15.3945 10.9321 15.0625 10.7075L12.7993 9.13281C12.4282 8.87402 12.0474 8.74707 11.6567 8.75195C11.271 8.75195 10.9243 8.9082 10.6167 9.2207L10.104 9.7334C9.98682 9.85059 9.86719 9.91406 9.74512 9.92383C9.62793 9.92871 9.49365 9.87012 9.34229 9.74805C9.21045 9.65039 9.0542 9.52588 8.87354 9.37451C8.69287 9.22314 8.50732 9.06201 8.31689 8.89111C8.13135 8.72021 7.96045 8.55664 7.8042 8.40039C7.65283 8.25391 7.50146 8.09766 7.3501 7.93164C7.20361 7.76562 7.06201 7.60205 6.92529 7.44092C6.79346 7.27979 6.67871 7.13086 6.58105 6.99414C6.46875 6.84277 6.41504 6.7085 6.41992 6.59131C6.4248 6.46924 6.4834 6.34961 6.5957 6.23242L7.1084 5.71973C7.42578 5.41211 7.58447 5.06299 7.58447 4.67236C7.58936 4.28174 7.4624 3.90332 7.20361 3.53711L5.54834 1.18604C5.3335 0.888184 5.0918 0.666016 4.82324 0.519531C4.55469 0.368164 4.27393 0.29248 3.98096 0.29248C3.47314 0.287598 2.98242 0.485352 2.50879 0.885742C2.47949 0.910156 2.4502 0.93457 2.4209 0.958984C2.39648 0.983398 2.37207 1.00537 2.34766 1.0249C1.88379 1.46924 1.54199 1.93555 1.32227 2.42383C1.10254 2.90723 0.992676 3.50537 0.992676 4.21826C0.992676 4.9751 1.12695 5.75879 1.39551 6.56934C1.66406 7.37988 2.07422 8.20508 2.62598 9.04492C3.18262 9.87988 3.88574 10.7173 4.73535 11.5571C5.58496 12.3921 6.4248 13.0806 7.25488 13.6226C8.08984 14.1646 8.91504 14.5674 9.73047 14.8311C10.5459 15.0947 11.354 15.2266 12.1548 15.2266ZM12.1328 13.835C11.5127 13.8447 10.856 13.7227 10.1626 13.4688C9.46924 13.2148 8.75635 12.8389 8.02393 12.3408C7.2915 11.8428 6.55176 11.2251 5.80469 10.4878C5.05273 9.75049 4.42285 9.01074 3.91504 8.26855C3.41211 7.52637 3.03369 6.80371 2.77979 6.10059C2.52588 5.39746 2.40381 4.73584 2.41357 4.11572C2.41846 3.73486 2.48682 3.3833 2.61865 3.06104C2.75537 2.73389 2.95557 2.45557 3.21924 2.22607C3.24854 2.19678 3.27783 2.17236 3.30713 2.15283C3.34131 2.12842 3.37305 2.104 3.40234 2.07959C3.49512 2.00146 3.59033 1.94287 3.68799 1.90381C3.78564 1.86475 3.88086 1.84521 3.97363 1.84521C4.20312 1.84521 4.38623 1.94775 4.52295 2.15283L5.83398 4.10107C5.93164 4.24756 5.97559 4.40137 5.96582 4.5625C5.95605 4.71875 5.88037 4.86523 5.73877 5.00195L5.24072 5.48535C4.92822 5.7832 4.76709 6.08838 4.75732 6.40088C4.75244 6.71338 4.83545 6.99658 5.00635 7.25049C5.18701 7.51904 5.44824 7.85107 5.79004 8.24658C6.13672 8.63721 6.49072 9.0083 6.85205 9.35986C7.12061 9.62842 7.39648 9.89209 7.67969 10.1509C7.96289 10.4097 8.22656 10.644 8.4707 10.854C8.71973 11.0591 8.9248 11.2153 9.08594 11.3228C9.33984 11.4937 9.62061 11.5767 9.92822 11.5718C10.2407 11.5669 10.5483 11.4058 10.8511 11.0884L11.3345 10.5977C11.4712 10.4512 11.6177 10.3755 11.7739 10.3706C11.9351 10.3608 12.0889 10.4023 12.2354 10.4951L14.0957 11.7183C14.208 11.7964 14.2861 11.8818 14.3301 11.9746C14.3789 12.0674 14.4033 12.165 14.4033 12.2676C14.4033 12.4629 14.3252 12.6558 14.1689 12.8462C14.1494 12.8755 14.1274 12.9072 14.103 12.9414C14.0786 12.9707 14.0518 13 14.0225 13.0293C13.7979 13.293 13.522 13.4907 13.1948 13.6226C12.8677 13.7593 12.5137 13.8301 12.1328 13.835Z"
      fill="black"
    />
  </svg>
);
const Results = () => {
  const getIcon = (icon: number) => {
    switch (icon) {
      case 0:
        return PhoneIcon;
      case 1:
        return MessageIcon;
      case 2:
        return MessageIcon;
      default:
        return MessageIcon;
    }
  };

  return (
    <Layout>
      <Container sx={{ py: 4 }}>
        <LinearProgress
          variant="determinate"
          value={100}
          sx={{ height: 6, borderRadius: 5 }}
        />
        <Stack sx={{ pt: 12 }}>
          <Typography variant="h4" textAlign="center" sx={{ my: 8 }}>
            {data.results.title}
          </Typography>
          <Typography variant="h5" textAlign="center" gutterBottom>
            7/10
          </Typography>
          <Typography variant="h5" textAlign="center" gutterBottom>
            {data.results.subtitle}
          </Typography>
        </Stack>
        <Stack direction="row" alignItems="center">
          {[...Array(10)].map((el, i) => (
            <Paper
              sx={{
                width: 1,
                height: i > 6 ? 50 : 60,
                mx: 0.7,
                bgcolor: i > 6 ? 'error.light' : 'error.main',
              }}
            ></Paper>
          ))}
        </Stack>
      </Container>
      <Stack
        sx={{
          bgcolor: 'primary.dark',
          py: 4,
          width: 1,
        }}
        color="white"
        alignItems="center"
      >
        <Container sx={{ py: 1 }}>
          <Stack spacing={2} sx={{ px: 2 }}>
            <Stack>
              <Typography textAlign="center" color="success.light" gutterBottom>
                {data.results.footer.subtitle}
              </Typography>

              <Typography textAlign="center" gutterBottom>
                {data.results.footer.title}
              </Typography>
            </Stack>

            {data.results.footer.links.map((el, i) => (
              <CtaButton
                key={i}
                color="secondary"
                variant="contained"
                endIcon={getIcon(i)}
              >
                {el}
              </CtaButton>
            ))}
          </Stack>
        </Container>
      </Stack>
    </Layout>
  );
};

export default Results;
